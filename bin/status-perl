#!/usr/bin/env perl
use strict;
use warnings;
use 5.010;

use FindBin '$Bin';
use lib "$Bin/../lib";
use CPAN2OBS qw/ debug info prompt /;

use Getopt::Long;
GetOptions(
    "update" => \my $update,
    "data=s" => \my $data,
    "project=s" => \my $project,
    "help|h" => \my $help,
);
usage(), exit if $help;
die "--data missing" unless $data;
$project ||= "home:tinita:CPAN:autoupdate";
#$project ||= "devel:languages:perl:autoupdate";

my $apiurl = "https://api.opensuse.org";

my $cpan2obs = CPAN2OBS->new({
    data => $data,
    apiurl => $apiurl,
    project_prefix => $project,
});

my @states = qw/ total done todo new older error /;
my @status_list;

if ($update) {
    $cpan2obs->update_status_perl();
}
my $states = $cpan2obs->fetch_status_perl();
my %counts;
for my $dist (sort keys %$states) {
    my $dist_status = $states->{ $dist };
    my $status = $dist_status->[0];
    if ($status =~ m/^error/) {
        $status = 'error';
    }
    $counts{ $status }++;
    $counts{total}++;
    next;
}

push @status_list, [
    "perl", map { $counts{ $_ } || 0 } @states,
];

info sprintf "     | %10s | %10s | %10s | %10s | %10s | %10s", @states;
for my $item (@status_list) {
    info sprintf "%s | %10s | %10s | %10s | %10s | %10s | %10s", @$item;
}

exit;

sub usage {
    print <<"EOM";
Usage:

    $0 --data ~/obs-mirror --project devel:languages:perl:autoupdate
    $0 --data ~/obs-mirror --project devel:languages:perl:autoupdate --update

Report status of modules to update.
With --update it will look into the latest data fetched with fetch-cpan` and
update the status.
EOM
}

